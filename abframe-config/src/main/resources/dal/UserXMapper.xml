<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserXMapper">
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
    <sql id="allAttribute">
        <![CDATA[
			userId,
			userName,
			name,
			password,
			perms,
			status,
			roleId,
			lastLogin,
			ip,
			email,
			number,
			phone,
			skin,
			bz,
			avatar_url
        ]]>
    </sql>
    <!-- 换皮肤-->
    <update id="setSKIN" parameterType="pd" flushCache="false">
		update t_user set
		skin = #{skin}
		where userName = #{userName}
	</update>

    <select id="listAllUser" parameterType="pd" resultType="pd" useCache="false">
        select u.userId,
        u.userName,
        u.password,
        u.lastLogin,
        u.name,
        u.ip,
        u.email,
        u.number,
        u.phone,
        r.roleId,
        r.name
        from t_user u, t_role r
        where u.roleId = r.roleId
        and u.userName != 'admin'
        and (r.roleId != '7' and r.parentId != '7')
        <if test="userName != null and userName != ''"><!-- 关键词检索 -->
            and
            (
            u.userName LIKE CONCAT(CONCAT('%', #{userName}),'%')
            or
            u.email LIKE CONCAT(CONCAT('%', #{userName}),'%')
            or
            u.number LIKE CONCAT(CONCAT('%', #{userName}),'%')
            or
            u.name LIKE CONCAT(CONCAT('%', #{userName}),'%')
            or
            u.phone LIKE CONCAT(CONCAT('%', #{userName}),'%')
            )
        </if>
        <if test="roleId != null and roleId != ''"><!-- 角色检索 -->
            and u.roleId=#{roleId}
        </if>
        <if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 登录时间检索 -->
            and u.lastLogin &gt;= #{lastLoginStart}
        </if>
        <if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 登录时间检索 -->
            and u.lastLogin &lt;= #{lastLoginEnd}
        </if>
        order by u.lastLogin desc
    </select>

    <!-- 删除用户 -->
    <delete id="deleteU" parameterType="pd" flushCache="false">
		delete from t_user
		where 
			userId = #{userId}
	</delete>

    <!-- 批量删除用户 -->
    <delete id="deleteAllU" parameterType="String" flushCache="false">
        delete from t_user
        where
        userId in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

</mapper>